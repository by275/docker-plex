#!/usr/bin/with-contenv bash

PLUGIN_ROOT="/config/Library/Application Support/Plex Media Server/Plug-ins"
SCANNER_ROOT="/config/Library/Application Support/Plex Media Server/Scanners"
PLEX_DB_ROOT="/config/Library/Application Support/Plex Media Server/Plug-in Support/Databases"
PLEX_PREFERENCES="/config/Library/Application Support/Plex Media Server/Preferences.xml"

PTC_ROOT="/config/Library/Application Support/Plex Media Server/Cache/PhotoTranscoder"

PLEX_SQLITE="/usr/lib/plexmediaserver/Plex SQLite"
PLEX_SCANNER="/usr/lib/plexmediaserver/Plex Media Scanner"

PLEX_USER=$(if getent passwd plex > /dev/null; then echo "plex"; else echo "abc"; fi)
PLEX_DB_FILE="${PLEX_DB_ROOT}/com.plexapp.plugins.library.db"

if [ -f "${PLEX_PREFERENCES}" ]; then
    PLEX_TOKEN=$(sed -n 's/.*PlexOnlineToken="//p' "${PLEX_PREFERENCES}" | sed "s/\".*//")
fi

git_pull() {
  if [ $# -lt 1 ]; then return 1; fi
  if [ -z "${1}" ] || [ ! -d "${1}" ]; then return 1; fi
  git config --global --get-all safe.directory | grep -wq "${1}" || \
    git config --global --add safe.directory "${1}"
  if [ "$(git -C "${1}" rev-parse --is-inside-work-tree 2>/dev/null)" = "true" ]; then
    git_dir=$(git -C "${1}" rev-parse --absolute-git-dir 2>/dev/null)
    find "${git_dir}" -name "index.lock" -exec rm -f {} \;
    git_url=$(git -C "${1}" config --get remote.origin.url 2>/dev/null)
    git_repo=$(echo "${git_url}" | cut -d/ -f4-)
    echo "*** checking for updates: ${git_repo%%.git}"
    git -C "${1}" reset --quiet --hard HEAD
    RESP=$(git -C "${1}" pull 2>&1 |tee /dev/null; exit "${PIPESTATUS[0]}") && \
      { if ! echo "$RESP" | grep -q "up to date"; then echo -e "$RESP" | ( TAB=$'    ' ; sed "s/^/$TAB/" ); fi } || \
      { echo "    $RESP"; echo "    re-installing to '${1}'..." && \
        rm -rf "${1}" && git -C "$(dirname "$1")" clone --quiet --depth 1 "${git_url}" > /dev/null
      }
  fi
}

is_git_dir() {
    if [ "$(git -C "$1" rev-parse --is-inside-work-tree 2>/dev/null)" = "true" ]; then return 0; fi
    return 1
}

install_bundle() {
    git_repo=$(echo "${1}" | cut -d/ -f2)
    bundle_root="${PLUGIN_ROOT}/${git_repo}"
    git_pull "${bundle_root}" || \
        {
            echo "*** installing ${git_repo}"
            rm -rf "${bundle_root}" && \
                git -C "${PLUGIN_ROOT}" clone --quiet --depth 1 \
                    "https://github.com/$1" > /dev/null
        }
    if [[ "$1" == *SjvaAgent.bundle ]]; then
        # install and update dummy agents
        for BUN in "${bundle_root}"/*/*.bundle; do
            [ -d "${PLUGIN_ROOT}/$(basename "$BUN")" ] && rm -rf "${PLUGIN_ROOT:?}/$(basename "$BUN")"
            mv "$BUN" "${PLUGIN_ROOT}"
        done

        # install and update scanners
        for SCN in "${bundle_root}"/Scanners/*; do
          if [ -d "$SCN" ]; then
            mvto="${SCANNER_ROOT}/$(basename "$SCN")"
            [ ! -d "${mvto}" ] && mkdir -p "$mvto"
            mv "$SCN"/* "${mvto}/"
          fi
        done
    fi
}

fix_ownership() {
  find "$@" \! \( -uid "$(id -u "$PLEX_USER")" -gid "$(id -g "$PLEX_USER")" \) -print0 | \
    xargs -0 --no-run-if-empty chown -h "$PLEX_USER":"$PLEX_USER"
}
