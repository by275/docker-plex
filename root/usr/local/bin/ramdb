#!/usr/bin/with-contenv bash
. /usr/local/bin/variables

# checks
if pidof -o %PPID -x "$(basename "$0")">/dev/null; then
	exit 0
fi

if [ "$#" -eq 0 ]; then
    exit 0
fi

if [ ! "$PLEX_RAMDB_ENABLED" = "true" ]; then
    exit 0
fi

if [ -f "${PLEX_PREFERENCES}" ]; then
    PLEX_TOKEN=$(sed -n 's/.*PlexOnlineToken="//p' "${PLEX_PREFERENCES}" | sed "s/\".*//")
fi

if [ -z "${PLEX_TOKEN}" ]; then
    exit 0
fi

ramdb_load() {
    if mountpoint -q "${PLEX_DB_ROOT}"; then
        echo "Target already mounted: '${PLEX_DB_ROOT}'"
        exit 1
    fi
    mount --bind "${PLEX_RAMDB_ROOT%/}" "$PLEX_DB_ROOT"
}


ramdb_unload() {
    while ls "${PLEX_DB_ROOT}"/com.plexapp.plugins.library*.db-* 1> /dev/null 2>&1; do
        sleep 1s
    done
    umount "$PLEX_DB_ROOT" && \
        cp -pf "${PLEX_RAMDB_ROOT%/}"/* "$PLEX_DB_ROOT"/
}


plex_up() {
    s6-svc -wu -u /var/run/s6/services/plex
}


plex_down() {
    until [ $(curl -sX GET http://localhost:32400/status/sessions -H "X-Plex-Token: $PLEX_TOKEN" | grep MediaContainer | sed -n 's/.*size="//p' | sed "s/\".*//") -eq 0 ] ; do
        sleep 1m
    done
    echo "Shutting down Plex Media Server."
    s6-svc -wD -d /var/run/s6/services/plex
}

if [ "$1" = "load" ]; then
    cp -pf "$PLEX_DB_ROOT"/* "${PLEX_RAMDB_ROOT%/}"/
    ramdb_load
elif [ "$1" = "unload" ]; then
    ramdb_unload
elif [ "$1" = "reload" ]; then
    plex_down
    ramdb_unload
    ramdb_load
    plex_up
fi

find "$PLEX_DB_ROOT" \! \( -uid $(id -u $PLEX_USER) -gid $(id -g $PLEX_USER) \) -print0 | \
    xargs -0 --no-run-if-empty chown -h $PLEX_USER:$PLEX_USER
